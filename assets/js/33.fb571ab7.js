(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{307:function(s,t,a){"use strict";a.r(t);var n=a(10),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"代码规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码规范"}},[s._v("#")]),s._v(" 代码规范")]),s._v(" "),t("h2",{attrs:{id:"介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),t("p",[s._v("使用 "),t("code",[s._v("eslint")]),s._v(" 检查并修复代码")]),s._v(" "),t("p",[s._v("多人开发保持代码规范统一")]),s._v(" "),t("p",[s._v("已配置保存文件时自动修复")]),s._v(" "),t("h2",{attrs:{id:"检查"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#检查"}},[s._v("#")]),s._v(" 检查")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("警告：")]),s._v("  禁止提交检查不通过的代码")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#检查命令")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run lint\n\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#检查结果")]),s._v("\n\n  /Users/index.vue\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("290")]),s._v(":32  error    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'data'")]),s._v(" is not defined                                   no-undef\n")])])]),t("h2",{attrs:{id:"修复"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修复"}},[s._v("#")]),s._v(" 修复")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("警告：")]),s._v("  ESLint 的自动修复功能（eslint --fix）只修复可以安全自动修复的问题。对于一些更复杂的或潜在破坏性的错误，ESLint 不会自动修复，这需要手动介入。")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#命令")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run lint -- "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--fix")]),s._v("\n")])])]),t("h2",{attrs:{id:"自动修复"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动修复"}},[s._v("#")]),s._v(" 自动修复")]),s._v(" "),t("p",[s._v("以vscode为例,其他工具自行百度")]),s._v(" "),t("ul",[t("li",[s._v("ctrl + shift + p 打开 搜索面板")]),s._v(" "),t("li",[s._v("输入 settings.json，选择 User 下的 settings.json")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  // "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#每次保存的时候将代码按eslint格式进行修复")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"editor.codeActionsOnSave"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"source.fixAll.eslint"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h3",{attrs:{id:"idea自动修复-仅供参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#idea自动修复-仅供参考"}},[s._v("#")]),s._v(" idea自动修复(仅供参考)")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("在 IntelliJ IDEA 中开发 Vue 项目时，你可以使用 ESLint 插件来实现保存时自动修复代码。下面是如何设置的步骤：\n\n安装 ESLint 插件：首先确保你已经在 IntelliJ IDEA 中安装了 ESLint 插件。你可以在 IDEA 的插件市场中搜索并安装 ESLint 插件。\n\n在项目中使用 ESLint：确保你的 Vue 项目中已经集成了 ESLint，并且已经配置好了 ESLint 规则。你可以使用 Vue CLI 创建的项目一般都会默认集成 ESLint。\n\n启用保存时自动修复：在 IntelliJ IDEA 中，打开设置（Preferences），然后选择 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Languages & Frameworks"')]),s._v(" -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"JavaScript"')]),s._v(" -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Code Quality Tools"')]),s._v(" -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ESLint"')]),s._v("。\n\n在 ESLint 设置中，勾选 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Enable"')]),s._v(" 选项，并选择 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Run eslint --fix on save"')]),s._v("。这样设置后，当你保存文件时，ESLint 将会自动根据规则修复文件。\n\n通过以上步骤，你就可以在 IntelliJ IDEA 中保存文件时自动修复代码了。记得在设置中确保 ESLint 已经启用，并且选择了保存时自动修复的选项。\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);